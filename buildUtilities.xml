<?xml version="1.0" encoding="utf-8"?>
<project name="CRIS UNS utilities" default="main" basedir=".">
	<property file="antBackup.properties" />
	<property name="src" value="${basedir}/src" />
	<property name="bin" value="${basedir}/bin" />
	<property name="dist" value="${basedir}/dist" />
	<property name="api" value="${basedir}/doc/api" />
	<property name="compile-libs" value="${basedir}/compile-libs" />
	<property name="runtime-libs" value="${basedir}/runtime-libs" />
	<property name="importIfjarName" value="importIF" />
	<path id="compile.classpath">
		<fileset dir="${compile-libs}" includes="*.jar" />
	</path>
	
	<target name="init" >
		<echo message="java.home = ${java.home}" />
		<echo message="tomcat.dir = ${tomcat.dir}" />
	</target>

	<!-- Delete all built files -->
	<target name="clean" depends="init">
		<delete dir="${bin}" />
		<delete dir="${dist}/utilities" />
		
	</target>

	<!-- Compile everything -->
	<target name="compile" depends="init">
		<mkdir dir="${bin}" />
		<javac srcdir="${src}" destdir="${bin}" classpathref="compile.classpath" >
			<include name="rs/ac/uns/ftn/informatika/bibliography/dao/**" />
			<include name="rs/ac/uns/ftn/informatika/bibliography/db/MetricsDB.java" />
			<include name="rs/ac/uns/ftn/informatika/bibliography/db/EvaluationDB.java" />
			<include name="rs/ac/uns/ftn/informatika/bibliography/evaluation/**"/>
			<include name="rs/ac/uns/ftn/informatika/bibliography/backup/**"/>
		
		</javac>
		<copy file="${src}/log4jBackup.properties" tofile="${bin}/log4j.properties" />		
		<copy file="${src}/rs/ac/uns/ftn/informatika/bibliography/backup/connection.properties" tofile="${bin}/rs/ac/uns/ftn/informatika/bibliography/backup/connection.properties" />
		<copy file="${src}/messages/messages-records_sr.properties" tofile="${bin}/messages/messages-records_sr.properties"/>
		<copy file="${src}/messages/messages-records_en.properties" tofile="${bin}/messages/messages-records_en.properties"/>
		
	</target>
	
	

	<!-- Jar -->
	<target name="importIFjar" depends="compile">
		<mkdir dir="${dist}/utilities" />
		
		<!-- create a property containing all .jar files, prefix lib/, and seperated with a space -->  
		<pathconvert property="libs.project" pathsep=" ">  
			<mapper>  
				<chainedmapper>  
			 		<!-- remove absolute path -->  
			 		<flattenmapper />  
			 		<!-- add lib/ prefix -->  
					<globmapper from="*" to="lib/*" />  
				</chainedmapper>  
			</mapper>  
	
			<path>  
				<!-- lib.home contains all jar files, in several subdirectories -->  
	     		<fileset dir="${runtime-libs}">  
			    	<include name="*.jar" />  
			    </fileset>  
	     	</path>  
		</pathconvert>  
		<mkdir dir="${dist}/utilities/lib" />  
		<copy todir="${dist}/utilities/lib" filtering="off">  
		  
		      <!-- remove the directory hierarchy: lib contains no subdirectories -->  
			<flattenmapper />  
		    <fileset dir="${runtime-libs}" >
		      	<include name="*.jar" />  
			</fileset>
		
		</copy>  
		<mkdir dir="${src}/META-INF/backup" />  
		<manifest file="${src}/META-INF/backup/MANIFEST.MF">
			<attribute name="Main-Class" value="rs.ac.uns.ftn.informatika.bibliography.evaluation.wosImport.ImportWosData"/>
			<!-- finally, use the magically generated libs path -->  
			<attribute name="Class-Path" value="${libs.project}" />  
		</manifest>
		<jar 
			destfile="${dist}/utilities/${importIfjarName}.jar"
			basedir="${bin}"
			manifest="${src}/META-INF/importIF/MANIFEST.MF" />
		
	</target>

	
	<target name="main" depends="clean, importIFjar" />
	
	
	
	<target name="run">
		<java jar="${dist}/utilities/${importIfjarName}.jar" fork="true"/>
			
	</target>
	
</project>